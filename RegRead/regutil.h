#pragma once

#include <Windows.h>
#include <iostream>
#include <format>
#include <vector>
#include <string>
#include "typedef.h"

namespace regutil
{
    typedef uint64_t REG_KEY_TYPE;

    enum REG_ROOT_KEY
    {
        REG_HKEY_CLASSES_ROOT = reinterpret_cast<REG_KEY_TYPE>(HKEY_CLASSES_ROOT),
        REG_HKEY_LOCAL_MACHINE = reinterpret_cast<REG_KEY_TYPE>(HKEY_LOCAL_MACHINE),
        REG_HKEY_CURRENT_USER = reinterpret_cast<REG_KEY_TYPE>(HKEY_CURRENT_USER),
        REG_HKEY_CURRENT_CONFIG = reinterpret_cast<REG_KEY_TYPE>(HKEY_CURRENT_CONFIG),
        REG_HKEY_USERS = reinterpret_cast<REG_KEY_TYPE>(HKEY_USERS)
    };

    class RegUtil 
    {
    private:
        const tstring getRegRootString(HKEY rootKey);

    public:
        RegUtil(void) {};
        ~RegUtil(void) {};
        void printRegValues(HKEY rootKey, const tstring& subPath);
    };
};



